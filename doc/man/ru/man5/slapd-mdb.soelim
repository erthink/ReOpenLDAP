.\" $ReOpenLDAP$
.\" Copyright 1992-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
.\" All rights reserved.
.\"
.\" This file is part of ReOpenLDAP.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted only as authorized by the OpenLDAP
.\" Public License.
.\"
.\" A copy of this license is available in the file LICENSE in the
.\" top-level directory of the distribution or, alternatively, at
.\" <http://www.OpenLDAP.org/license.html>.

.TH SLAPD-MDB 5 "@RELEASE_DATE@" "ReOpenLDAP @VERSION@"

.SH НАЗВАНИЕ
slapd\-mdb \- механизм манипуляции данными для slapd Memory-Mapped DB (отображаемая в памяти база данных)

.SH СИНТАКСИС
.B @SYSCONFDIR@/slapd.conf

.SH ОПИСАНИЕ
В ReOpenLDAP механизм манипуляции данными для
.BR slapd (8)
\fBmdb\fP использует для хранения данных библиотеку Extended Lightning Memory-Mapped Data Base (\fBlibmdbx\fP).
Библиотека не имеет собственных механизмов кэширования, полагаясь на средства
управления виртуальной памятью операционной системы, в которой она работает.
\fBmdb\fP является рекомендуемым первичным механизмом для работы с базами данных.
.LP
Механизм \fBmdb\fP похож на \fBhdb\fP в том, что в нем используется иерархическое
представление базы данных с поддержкой переименования поддеревьев. Он экономичнее
и производительнее \fBbdb\fP, и при этом гораздо проще настраивается.
.SH ПРЕИМУЩЕСТВА И НЕДОСТАТКИ
При обеспечении конкурентного доступа поведение \fBmdb\fP полностью соответствует
модели MVCC (MultiVersion Concurrency Control). Поэтому на операциях чтения
\fBmdb\fP очень хорошо масштабируется по ядрам CPU и показывает наилучшую
производительность. Но при интенсивном изменении данных проявляется ряд слабых
мест, которые необходимо учитывать в соответствующих сценариях использования.
.LP
Согласно модели MVCC, механизм \fBmdb\fP создает отдельную логическую
копию всех внутренних структур и индексов для каждой завершенной операции
записи (транзакции). При этом все, даже малейшие, изменения
помещаются в новые блоки (страницы) базы данных, а не измененные страницы
используются совместно с предыдущими завершенными транзакциями.
В случае с LDAP-базой значительного размера с несколькими индексами,
даже одна операция может приводить к нескольким десяткам или даже сотням
изменяемых и копируемых страниц. Поэтому в сравнении с другими механизмами
и базами данных \fBmdb\fP порождает больше трафика записи данных на диск.
.LP
Занятые данными блоки (страницы) всегда связаны с некоторым множеством версий
базы данных, которые являются результатом завершенных транзакций записи. Эти
занятые блоки (страницы) могут быть освобождены и использованы повторно только
если отсутствуют активные операции чтения, которые используют соответствующие
версии-снимки базы данных. Таким образом, продолжительные операции чтения
приостанавливают освобождение и повторное использование блоков (страниц),
которые заняты старыми данными. Поэтому медленное чтение на фоне интенсивного
потока изменений может приводить к исчерпанию свободного места в базе данных
и временной невозможности какого-либо изменения данных.
.LP
Проблема переполнения \fBmdb\fP особенно актуальна при выборке больших объемов
данных с последующей передачей по медленной сети. Так, в версии 2.4.41
исходного проекта OpenLDAP был реализован механизм перезапуска операций чтения
при ожидании сетевых операций. Однако этого оказалось недостаточно
для промышленной эксплуатации в условии высоких нагрузок. Поэтому
для преодоления этого и других указанных недостатков в рамках ReOpenLDAP
реализовано несколько дополнительных механизмов.
.SH КОНФИГУРАЦИЯ
Приведённые ниже директивы
.B slapd.conf
применяются к базам данных механизма манипуляции данными \fBmdb\fP.
То есть они должны следовать за строкой "database mdb" и предшествовать
любой из последующих строк "backend" или "database". Другие относящиеся
к базам данных директивы описаны в man-странице
.BR slapd.conf (5).
.TP
.BI checkpoint \ <kbyte>\ <min>
Указывает частоту синхронизации образа базы данных в оперативной памяти
с записанным на диске. Эта установка полезна при использовании директивы
\fBdbnosync\fP, либо флагов \fBnosync\fR, \fBlazysync\fR, \fBnometasync\fR, \fBmapasync\fR
в директиве \fBenvflags\fR. Иначе синхронизация выполняется
при завершении каждой операции (транзакции) записи и дополнительное
формирование контрольных точек теряет смысл.
Выгрузка данных произойдёт либо при записи данных размером \fI<kbyte>\fP Кбайт,
либо по прошествии \fI<min>\fP минут с момента последней выгрузки.
По умолчанию оба аргумента установлены в ноль, в этом случае они игнорируются.
Если аргумент \fI<min>\fP отличен от нуля, каждые \fI<min>\fP минут будет
запускаться внутренняя задача по выгрузке данных.
.RS
.LP
\fIПримечание 1:\fP
В ReOpenLDAP гарантируется консистентность данных на диске в каждой
контрольной точке, вне зависимости от режима заданного флагами директивы \fBnosync\fR.
Оригинальный OpenLDAP в некоторых сценариях допускает полное разрушение
базы данных при комбинировании \fBwritemap\fR с \fBnosync\fR, \fBnometasync\fR
и \fBmapasync\fR.
Однако, ОБРАТИТЕ ВНИМАНИЕ, в режимах \fBnosync\fR,
\fBlazysync\fR и \fBnometasync\fR после нештатно (аварийного)
завершения опорный движок хранения \fBlibmdbx\fP откатит все
изменения до последней контрольной точки фиксации на диске,
сформированной в соответствии с параметрами опции \fBcheckpoint\fR.
Соответственно, если \fBcheckpoint\fR не используется, то могут быть потеряны
все изменения в DIT после последнего штатного (не аварийного) завершения \fBslapd\fR.
.LP
\fIПримечание 2:\fP
В ReOpenLDAP реализована поддержка установки \fI<kbyte>\fP. При этом под объемом
данных подразумевается суммарный размер измененных страниц внутри \fBmdb\fP.
В оригинальном OpenLDAP эта опция по-прежнему не обслуживается.
.LP
\fIПримечание 3:\fP
В ReOpenLDAP интерпретация значения \fI<min>\fP зависит от режима задаваемого
флагами директивы \fBreopenldap\fR. Если указан флаг \fIiddqd\fP,
то указанное значение будет задавать интервал в секундах, а не в минутах.
При большом потоке изменений, задаваемый в секундах интервал позволяет выровнять
нагрузку на подсистему хранения и сократить объем потерь в случае аварии.
.RE
.TP
.B dbnosync
Указывает, что содержимое базы данных на диске не должно
немедленно синхронизироваться при изменении содержимого базы
данных в памяти. Включение этой опции может повысить
производительность за счёт увеличения риска потери данных. В
частности, если до синхронизации изменений произойдёт крах
операционной системы, существенное количество транзакций
(изменений) может быть потеряно. По умолчанию при фиксации
каждой транзакции выполняется полная синхронизация данных.
.TP
.BI directory \ <directory>
Указывает директорию, где находятся MDBX-файлы, содержащие эту базу данных
и ассоциированные с ней индексы. Для каждой базы данных должна быть определена
отдельная директория. По умолчанию -
.BR @LOCALSTATEDIR@/reopenldap\-data .
.TP
.BI dreamcatcher \ <lag>\ <percentage>
Управляет механизмом перезапуска долгих операций чтения, которые в \fBlibmdbx\fP
останавливают освобождение и повторное использование страниц, использованных
в старых версиях-снимках базы данных (результатов прошлых транзакций записи),
что при интенсивном потоке изменений приводит к полному заполнению базы и отказу.
Первый параметр \fI<lag>\fP задает порог отставания в транзакциях, при
достижении которого будет производиться рестарт операции чтения; значение
0 отключает dreamcatcher. Второй параметр \fI<percentage>\fP задает порог
заполнения базы данных в процентах, при достижении которого dreamcatcher
активируется; значение 0 соответствует постоянной активности.
.RS
.LP
\fIПримечание 1:\fP
\fBdreamcatcher\fR не может гарантировать полную защиту от
переполнения базы данных вследствие специфики обработки запросов
в \fBslapd\fR, для этого рекомендуется использовать \fBoom\-handler\fR \fIyield\fP.
.LP
\fIПримечание 2:\fP
\fBdreamcatcher\fR доступен только в ReOpenLDAP и отсутствует в исходном OpenLDAP.
.RE
.TP
.BI oom\-handler \ [kill]\ [yield]
Управляет поведением в случае, когда во время выполнения запроса
приводящего к изменению данных были исчерпаны все доступные страницы,
но при есть страницы, освобождение и повторное использование которых
заблокировано конкурентными операциями чтения.
.RS
.TP
.B kill
Включает режим убивания. Если операция чтения выполняется другим процессом (не
самим \fBslapd\fR), то такому процессу-стопору отправляется сигнал SIGKILL.
Примером такого внешнего процесса-стопора может быть утилита mdb_copy,
запущенная для копирования большой базы данных.
На операции внутри самого \fBslapd\fR этот режим влияния не оказывает.
.RE
.TP
.RS
.TP
.B yield
Включает режим ожидания. Вместо прерывания операции механизм \fBmdb\fP
будет ждать завершение конкурирующих операций, которые мешают освобождению
и повторному использованию страниц со старыми данными (результаты прошлых
транзакций записи).
.RE
.RS
.LP
\fIПримечание 1:\fP
рекомендуется использовать \fBoom\-handler\fR \fIyield\fP вместе
с \fBdreamcatcher\fR, поскольку в этом случае гарантируется защита от оперативного переполнения
базы данных и обеспечивается минимизация пауз из-за ожидания.
.LP
\fIПримечание 2:\fP
\fBoom\-handler\fR доступен только в ReOpenLDAP и отсутствует в исходном OpenLDAP.
.RE
.TP
.TP
.BI envflags \ [nosync]\ [lazysync]\ [nometasync]\ [writemap]\ [mapasync]\ [nordahead]\ [lifo]\ [coalesce]
Указывает флаги для более детального контроля работы опорного движка \fBlibmdbx\fP.
\fIПримечание:\fP в slapd.conf перечисленные флаги для \fBenvflags\fR необходимо
задавать без скобок и запятых, разделяя пробелами или символами табуляции.
.RS
.TP
.B nosync
То же самое, что и директива
.IR dbnosync .
.RE
.RS
.TP
.B lazysync
Опция будет документирована позже.
.RE
.RS
.TP
.B nometasync
При фиксации транзакции данные синхронизируются, а синхронизация метастраницы пропускается.
Этот метод несколько быстрее, чем выполнение полной синхронизации, но существует вероятность потери
последней транзакций при крахе операционной системы. Если выставлены оба флага
.I nometasync
и
.IR nosync ,
приоритет будет у флага
.IR nosync .
.RE
.RS
.TP
.B writemap
Использовать отображение в памяти с возможностью записи, а не в режиме "только чтение".
Это ускоряет операции записи, но может привести к разрушению базы данных в случае какой-либо ошибки в slapd,
приводящей к случайным записям в область mmap.
.RE
.RS
.TP
.B mapasync
При использовании отображения в памяти с возможностью записи и выполнении синхронизации
при каждой фиксации транзакции, применять асинхронную синхронизацию вместо синхронной (по умолчанию).
Эта опция не имеет никакого эффекта, если флаг
.I writemap
не установлен. Также она не будет иметь эффекта, если установлен флаг
.IR nosync .
.RE
.RS
.TP
.B nordahead
Отключает упреждающее чтение файла. Обычно операционная система выполняет упреждающее чтение при каждом запросе на чтение.
Как правило, это повышает производительность операций чтения, но может ухудшить производительность при чтении
с произвольным доступом, если системная память заполнена и размер базы данных больше чем объём RAM.
.RE
.RS
.TP
.B lifo
Включает LIFO (обратный) порядок переработки внутри сборщикам мусора \fBlibmdbx\fP.
Вследствие чего, с большой вероятностью, от транзакции к транзакции используется
повторяющийся набор страниц. Это, в свою очередь, позволяет подсистеме хранения
эффективно использовать внутренние механизмы кеширования и обратной записи,
объединяя такие повторные операции. В результате может существенно увеличиться
общая производительность одновременно со снижением реальной нагрузки
на подсистему хранения (диски).
Режим \fIlifo\fP доступен только в ReOpenLDAP.
.RE
.RS
.TP
.B coalesce
Включает коагуляцию записей сборщика мусора внутри \fBlibmdbx\fP (объединение списков
свободных страниц), что уменьшает объем внутренних индексов и количество
обновляемых страниц при любых изменениях. В результате в большинстве
сценариев несколько уменьшается нагрузка на подсистему хранения.
Режим \fIcoalesce\fP доступен только в ReOpenLDAP.
.RE
.TP
\fBindex \fR{\fI<attrlist>\fR|\fBdefault\fR} [\fBpres\fR,\fBeq\fR,\fBapprox\fR,\fBsub\fR,\fI<special>\fR]
Указывает индексы, которые поддерживаются для указанного атрибута (или списка атрибутов).
Некоторые атрибуты поддерживают не все индексы.
Если задан только список атрибутов \fI<attrlist>\fP, для этих атрибутов будут поддерживаться индексы,
указанные как индексы по умолчанию \fBdefault\fR. Обратите внимание, что задание индексов по умолчанию
не подразумевает, что будут проиндексированы все атрибуты.
Кроме того, с целью обеспечения наилучшей производительности для атрибута
.B objectClass
следует всегда настраивать индекс
.BR eq .

Может быть указано несколько специальных параметров индексирования. Тип индекса
.B sub
может быть представлен как три отдельных типа
.BR subinitial ,
.B subany
и
.BR subfinal .
Для запрета использования данного индекса для языковых подтипов может быть указан специальный тип
.BR nolang .
Для запрета использования данного индекса для именованных подтипов может быть указан специальный тип
.BR nosubtypes .
\fIПримечание:\fP при изменении установок \fBindex\fP в
.BR slapd.conf (5)
требуется повторное построение индексов, смотрите
.BR slapindex (8);
динамическое изменение установок \fBindex\fP путём выполнения операций LDAPModifying над "cn=config"
приводит к автоматическому онлайн-перепостроению индексов в фоновом режиме.
.TP
.BI maxreaders \ <integer>
Указывает максимальное количество потоков, которые могут параллельно получать доступ на чтение к базе данных.
Работа таких инструментов, как slapcat, считается за один поток в дополнение к потокам
в любых активных процессах slapd. Значение по умолчанию - 61.
.TP
.BI maxsize \ <bytes>
Указывает максимальный размер базы данных в байтах. При запуске под отображение базы данных в памяти
выделяется соответствующее количество памяти, и базе данных не будет позволено выйти за пределы этого размера.
Значение по умолчанию - 10485760 байт. Эту настройку можно изменить, если установленный предел требуется увеличить.

\fIПримечание:\fP Важно установить значение этой директивы как можно большим
(с учётом ожидаемого реального прироста базы данных с течением времени),
поскольку последующее увеличение размера может оказаться неосуществимым при высокой загрузке системы.
.TP
.BI mode \ <integer>
Указывает режим защиты файлов (права на доступ к ним), который следует назначать вновь создаваемым файлам базы данных.
Значение по умолчанию - 0600.
.BI rtxnsize \ <entries>
Указывает максимальное количество записей, которые будут обрабатываться в одной транзакции чтения при
выполнении больших поисковых запросов. Транзакции чтения с большим временем жизни не позволяют повторно
использовать старые страницы базы данных в транзакциях записи, и поэтому могут привести к значительному
разрастанию файла базы данных при большом трафике записи. Данная настройка приводит к тому, что транзакции
чтения в больших поисковых запросах будут высвобождаться и создаваться заново после того, как было прочитано
указанное количество записей, тем самым давая транзакциям записи возможность повторно претендовать на старые
страницы базы данных. Значение по умолчанию - 10000.
.TP
.TP
.BI searchstack \ <depth>
Указывает глубину стека, используемого для оценки поискового фильтра.
Оценка поисковых фильтров происходит по стеку, в который помещаются вложенные условия AND / OR.
Для каждого потока сервера выделяется собственный стек. Глубина стека определяет,
насколько комплексные фильтры могут быть оценены без необходимости выделения дополнительной памяти.
Применение поискового фильтра с глубиной вложенности большей, чем глубина поискового стека,
приведёт к тому, что для этой конкретной операции поиска будет выделен отдельный стек.
Подобные выделения могут оказать существенное негативное влияние на производительность сервера,
но и определение слишком большого стека также приведёт к потреблению большого объёма памяти.
Каждый поисковый стек использует 512 Kb для одного вложенного уровня условий.
Глубина стека по умолчанию - 16, то есть используется 8 Mb памяти для каждого потока.
.SH КОНТРОЛЬ ДОСТУПА
Механизм манипуляции данными
.B mdb
соблюдает указанные в
.BR slapd.access (5)
семантики контроля доступа.
.SH ФАЙЛЫ
.TP
.B @SYSCONFDIR@/slapd.conf
конфигурационный файл
.B slapd
по умолчанию.
.SH СМОТРИТЕ ТАКЖЕ
.BR libmdbx (https://gitflic.ru/project/erthink/libmdbx),
.BR slapd.conf (5),
.BR slapd\-config (5),
.BR slapd (8),
.BR slapadd (8),
.BR slapcat (8),
.BR slapindex (8),
документацию MDBX ReOpenLDAP.
.SH ПРИЗНАНИЕ ЗАСЛУГ
.so ../Project
Исходный англоязычный текст написан Говардом Чу (Howard Chu) и переведен на русский Егором Левинца.
Дополнения относящиеся к ReOpenLDAP написаны Леонидом Юрьевым и переведены на английский Сергеем Черниным.
