#!/bin/bash
## $ReOpenLDAP$
## Copyright 1998-2018 ReOpenLDAP AUTHORS: please see AUTHORS file.
## All rights reserved.
##
## This file is part of ReOpenLDAP.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. ${TOP_SRCDIR}/tests/scripts/defines.sh

if test ${AC_conf[tls]} = no ; then
	echo "TLS support not available, test skipped"
	exit 0
fi
if test ${AC_conf[sasl]} = no ; then
        echo "SASL support not available, test skipped"
        exit 0
fi
if $LDAPSEARCH -o tls_cacert=$TESTDIR/tls/ca/certs/testsuiteCA.crt -o tls_reqcert=hard -H "ldaps://0.0.0.0" 2<&1 | grep -i -q  "Invalid general option name"
then
    echo "ldap-client tools don't support TLS options, test skipped"
    echo "HINT: use ldap-client tools from the next/devel version of ReOpenLDAP"
    echo "      LDAP_CLIENTDIR=<MODERN_VERSION_INSTALL_PREFIX>/bin make test"
    exit 0
fi

mkdir -p $TESTDIR $DBDIR1
cp -r $DATADIR/tls $TESTDIR

cd $TESTWD

echo "Running slapadd to build slapd database..."
config_filter  $BACKEND ${AC_conf[monitor]} < $TLSSASLCONF > $CONF1
$SLAPADD -f $CONF1 -l $LDIFORDERED
RC=$?
if test $RC != 0 ; then
        echo "slapadd failed ($RC)!"
        exit $RC
fi

echo "Starting ldap:/// slapd on TCP/IP port $PORT1 and ldaps:/// slapd on $PORT2..."
$SLAPD -f $CONF1 -h "$URI1 $SURI2" -d $LVL $TIMING > $LOG1 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"
check_running 1

echo -n "Using ldapwhoami with SASL/EXTERNAL...."
$LDAPSASLWHOAMI -o tls_cacert=$TESTDIR/tls/ca/certs/testsuiteCA.crt -o tls_reqcert=hard \
	-o tls_cert=$TESTDIR/tls/certs/bjensen@mailgw.example.com.crt -o tls_key=$TESTDIR/tls/private/bjensen@mailgw.example.com.key -ZZ -Y EXTERNAL -H $URIP1 \
	> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldapwhoami (startTLS) failed ($RC)!"
	killservers
	exit $RC
else
	echo "success"
fi

echo -n "Validating mapped SASL ID..."
echo 'dn:cn=barbara jensen,ou=information technology division,ou=people,dc=example,dc=com' > $TESTDIR/dn.out
$CMP $TESTDIR/dn.out $TESTOUT > $CMPOUT

RC=$?
if test $RC != 0 ; then
	echo "Comparison failed"
	killservers
	exit $RC
else
	echo "success"
fi

    killservers
echo ">>>>> Test succeeded"
exit 0
